/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package abm;

import Dao.AlumnoDAOJDBC;
import Dao.AlumnoDAOProxy;
import Dao.AlumnoDaoTxt;
import Dao.DAO;
import Persona.Alumno;
import Persona.MiCalendar;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author laboratorios
 */
public class ABMAlumno extends javax.swing.JFrame {

    /**
     * Creates new form ABMAlumno
     */
    public ABMAlumno() 
    {
        initComponents();
        setLocationRelativeTo(null);
        alu = new Alumno();
        modelo = new MiModeloTabla();
        alumnosTable.setModel(modelo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nuevoButton = new javax.swing.JButton();
        buscarButton = new javax.swing.JButton();
        actualizarButton = new javax.swing.JButton();
        darDeBajaButton = new javax.swing.JButton();
        cargarArchivoButton = new javax.swing.JButton();
        dniTextField = new javax.swing.JTextField();
        apellidoNombreTextField = new javax.swing.JTextField();
        sexoComboBox1 = new javax.swing.JComboBox();
        carreraComboBox2 = new javax.swing.JComboBox();
        promedioTextField = new javax.swing.JTextField();
        matAprobTextField = new javax.swing.JTextField();
        archivoTextField = new javax.swing.JTextField();
        eliminarButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        alumnosTable = new javax.swing.JTable();
        naceDateChooser = new com.toedter.calendar.JDateChooser();
        ingrDateChooser = new com.toedter.calendar.JDateChooser();
        txtButton = new javax.swing.JButton();
        dbButton = new javax.swing.JButton();
        proxyButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("DNI");

        jLabel2.setText("Apellido y Nombre");

        jLabel3.setText("Fecha Nacimiento");

        jLabel4.setText("Sexo");

        jLabel5.setText("Promedio");

        jLabel6.setText("Cant. Mat. Aprob.");

        jLabel7.setText("Carrera");

        jLabel8.setText("Fecha Ingreso");

        nuevoButton.setText("Nuevo");
        nuevoButton.setEnabled(false);
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        buscarButton.setText("Buscar");
        buscarButton.setEnabled(false);
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        actualizarButton.setText("Actualizar");
        actualizarButton.setEnabled(false);
        actualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtonActionPerformed(evt);
            }
        });

        darDeBajaButton.setText("Dar de Baja");
        darDeBajaButton.setEnabled(false);
        darDeBajaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darDeBajaButtonActionPerformed(evt);
            }
        });

        cargarArchivoButton.setText("Cargar Archivo");
        cargarArchivoButton.setEnabled(false);
        cargarArchivoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarArchivoButtonActionPerformed(evt);
            }
        });

        dniTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dniTextFieldFocusLost(evt);
            }
        });

        apellidoNombreTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                apellidoNombreTextFieldFocusLost(evt);
            }
        });
        apellidoNombreTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apellidoNombreTextFieldKeyTyped(evt);
            }
        });

        sexoComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        sexoComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sexoComboBox1ItemStateChanged(evt);
            }
        });

        carreraComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "INF", "MED", "CIV", "ADM", "ABO" }));
        carreraComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                carreraComboBox2ItemStateChanged(evt);
            }
        });

        promedioTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                promedioTextFieldFocusLost(evt);
            }
        });

        matAprobTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                matAprobTextFieldFocusLost(evt);
            }
        });
        matAprobTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                matAprobTextFieldKeyTyped(evt);
            }
        });

        eliminarButton.setText("Eliminar");
        eliminarButton.setEnabled(false);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        alumnosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(alumnosTable);

        txtButton.setText("TXT");
        txtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtButtonActionPerformed(evt);
            }
        });

        dbButton.setText("DB");
        dbButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbButtonActionPerformed(evt);
            }
        });

        proxyButton.setText("PROXY");
        proxyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxyButtonActionPerformed(evt);
            }
        });

        cerrarButton.setText("Cerrar");
        cerrarButton.setEnabled(false);
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(dbButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(proxyButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(cargarArchivoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(archivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(naceDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(ingrDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(dniTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(apellidoNombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(sexoComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(promedioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(matAprobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(carreraComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(darDeBajaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actualizarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nuevoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cerrarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(105, 105, 105))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtButton)
                    .addComponent(dbButton)
                    .addComponent(proxyButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(archivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargarArchivoButton)
                    .addComponent(cerrarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nuevoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(actualizarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(darDeBajaButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dniTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buscarButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sexoComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apellidoNombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(promedioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eliminarButton)
                        .addGap(58, 58, 58))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(naceDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingrDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(matAprobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(carreraComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dniTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dniTextFieldFocusLost
        try
        {
         alu.setDni(Integer.valueOf(dniTextField.getText()));
        }
        catch(NumberFormatException ex)
        {
            manejarEx(ex, "El valor ingresado no conforma un numero");
        }
        catch(Exception ex)
        {
            manejarEx(ex, ex.getMessage());
        }
    }//GEN-LAST:event_dniTextFieldFocusLost

    private void manejarEx(Exception ex, String mensaje) throws HeadlessException {
        Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, mensaje,"ERROR",JOptionPane.ERROR_MESSAGE);
        dniTextField.requestFocus();
    }

    private void cargarArchivoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarArchivoButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int ret = fileChooser.showOpenDialog(this);
        if(ret != JFileChooser.APPROVE_OPTION)
            {
                return;
            }
        if(dao != null)
            {
            try 
            {
                dao.cerrar();
            } 
            catch (Exception ex) 
            {
                Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        try
        {
            dao = new AlumnoDaoTxt(fileChooser.getSelectedFile());
            ruta = fileChooser.getSelectedFile().getAbsolutePath();
            cargarTablaArchivo(fileChooser.getSelectedFile().getAbsolutePath());
            nuevoButton.setEnabled(true);
            darDeBajaButton.setEnabled(true);
            actualizarButton.setEnabled(true);
            buscarButton.setEnabled(true);
            cerrarButton.setEnabled(true);
        }
        catch(FileNotFoundException ex)
        {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        archivoTextField.setText(fileChooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_cargarArchivoButtonActionPerformed

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        if(apellidoNombreTextField.getText().equals("") || dniTextField.getText().equals("") || promedioTextField.getText().equals("") || matAprobTextField.getText().equals("") || naceDateChooser.getDate() == null || ingrDateChooser.getDate() == null)
        { 
            JOptionPane.showMessageDialog(this,"Debe completar todos los campos", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        alu.setCarrera(carreraComboBox2.getSelectedItem().toString());
        alu.setEstado("A");
        try 
        {
            toFecha();
            alu.setSexo((sexoComboBox1.getSelectedItem().toString()).charAt(0));
            if(dao.existe(alu.getDni()))
                    {
                        JOptionPane.showMessageDialog(this,"La persona ya se encuentra en nuestra base", "WARNING", JOptionPane.WARNING_MESSAGE);
                    }
            else    {
                        dao.insertar(alu);
                        if(habilitaDB){cargarTablaDB();}        
                        else{if(habilitaProxy){cargarTablaProxy();}
                        else{cargarTablaArchivo(ruta);}}
                        JOptionPane.showMessageDialog(null, "Nuestra base se ha actualizado!");
                    }
        }
        catch(NullPointerException ex)
        {JOptionPane.showMessageDialog(this,"Debe cargar un archivo","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception ex)
        {Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        return;
        }
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        String dni;
        //int dni;
        dni = dniTextField.getText();
        //dni = alu.getDni();
        if(dni != null)
            {
            try 
            {
                if(dao.existe(Integer.valueOf(dni)))
                {
                alu = dao.buscar(Integer.valueOf(dni));
                habilitaAct = true;
                if( alu != null)
                    {
                    dniTextField.setText(Integer.toString(alu.getDni()));
                    apellidoNombreTextField.setText(alu.getAyn());
                    matAprobTextField.setText(Integer.toString(alu.getCantMat()));
                    promedioTextField.setText(String.valueOf(alu.getProm()));
                    sexoComboBox1.setSelectedItem(String.valueOf(alu.getSexo()));
                    carreraComboBox2.setSelectedItem(alu.getCarrera());
                    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy"); 
                    Date ingrDate = formato.parse(alu.getFechaIngr().toString()); 
                    ingrDateChooser.setDate(ingrDate);  
                    Date naceDate = formato.parse(alu.getFecha().toString()); 
                    naceDateChooser.setDate(naceDate);
                    }
                }
                else
                {
                 JOptionPane.showMessageDialog(this,"Ese dni no se encuentra en nuestra base", "ERROR", JOptionPane.ERROR_MESSAGE);   
                }
            }
            catch (Exception ex) {
                Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);}
            }
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        try 
        {
            dao.eliminar(alu);
            if(habilitaProxy){}
            else{cargarTablaDB();}       
            JOptionPane.showMessageDialog(null, "Nuestra base se ha actualizado!");
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void darDeBajaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darDeBajaButtonActionPerformed
         if(habilitaAct)
        {
             habilitaAct = false;
            try 
            { 
            if(dao.existe(alu.getDni()))
            {
                dao.darDeBaja(alu);
                JOptionPane.showMessageDialog(null, "Nuestra base se ha actualizado!");
                if(habilitaDB){cargarTablaDB();}        
                else{if(habilitaProxy){cargarTablaProxy();}
                else{cargarTablaArchivo(ruta);}}
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Ese dni no se encuentra en nuestra base", "ERROR", JOptionPane.ERROR_MESSAGE);   
            }
            } 
            catch (Exception ex) 
            {
                Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
         {
             JOptionPane.showMessageDialog(null, "Primero debe buscar una persona");
         }
    }//GEN-LAST:event_darDeBajaButtonActionPerformed

    private boolean comparaAlus(Alumno aluCarga, Alumno aluTxt){
        if(aluCarga.getDni() == aluTxt.getDni())
        {
            if(aluCarga.getAyn().equals(aluTxt.getAyn())) 
            {   
                if(aluCarga.getProm() == aluTxt.getProm())
                {
                    if(aluCarga.getCantMat() == aluTxt.getCantMat())
                    {
                        if(aluCarga.getSexo() == aluTxt.getSexo())
                        {
                            if(aluCarga.getCarrera().equals(aluTxt.getCarrera()))
                            {
                                if(!((aluCarga.getFecha().toString()).equals((aluTxt.getFecha()).toString())))
                                {
                                    if(!((aluCarga.getFechaIngr().toString()).equals((aluTxt.getFechaIngr()).toString())))  
                                    {
                                        return false;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return true;
    }
    
    private Alumno copioAlumno(Alumno aluQueCopia) throws Exception{
        Alumno aluACopiar = new Alumno(); 
        aluACopiar.setDni(aluQueCopia.getDni());
        aluACopiar.setAyn(aluQueCopia.getAyn());
        aluACopiar.setProm(aluQueCopia.getProm());
        aluACopiar.setCantMat(aluQueCopia.getCantMat());
        aluACopiar.setSexo(aluQueCopia.getSexo());
        aluACopiar.setCarrera(aluQueCopia.getCarrera());
        aluACopiar.setFecha(aluQueCopia.getFecha());
        aluACopiar.setFechaIngr(aluQueCopia.getFechaIngr());
        aluACopiar.setEstado(aluQueCopia.getEstado());
        return(aluACopiar);
    }
    
    private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed
        if(habilitaAct)
        {
            habilitaAct = false;
            try 
            {
                Integer dni = alu.getDni();
                this.toFecha();
                alu2 = copioAlumno(alu);
                alu1 = dao.buscar(dni);
                if(comparaAlus(alu2,alu1))
                {
                    dao.actualizar(alu2); 
                    JOptionPane.showMessageDialog(null, "Nuestra base se ha actualizado!");
                    if(habilitaDB){cargarTablaDB();}        
                    else{if(habilitaProxy){cargarTablaProxy();}
                    else{cargarTablaArchivo(ruta);}}
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Si quiere actualizar debe modificar algun campo");
                }
            } 
            catch (Exception ex) 
            {
                Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
         JOptionPane.showMessageDialog(null, "Primero debe buscar una persona");
        }
    }//GEN-LAST:event_actualizarButtonActionPerformed

    private void apellidoNombreTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apellidoNombreTextFieldFocusLost
        alu.setAyn(apellidoNombreTextField.getText());
        
    }//GEN-LAST:event_apellidoNombreTextFieldFocusLost

    private void promedioTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_promedioTextFieldFocusLost
        try 
        {
            Double prom = Double.valueOf(promedioTextField.getText());
            if((prom >= 1) && (prom <= 10))
            {
                alu.setProm(prom);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "El promedio debe tomar valor entre 1 y 10", "Error", JOptionPane.ERROR_MESSAGE);
                promedioTextField.requestFocus();
                promedioTextField.setText("");
            }
        } 
            catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El valor ingresado no conforma un número", "Error", JOptionPane.ERROR_MESSAGE);
            promedioTextField.requestFocus();
            promedioTextField.setText("");
        }
            catch (Exception ex) {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_promedioTextFieldFocusLost

    private void matAprobTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matAprobTextFieldFocusLost
        if(Integer.valueOf(matAprobTextField.getText()) <0 || Integer.valueOf(matAprobTextField.getText()) >100)
            JOptionPane.showMessageDialog(this, "La cantidad de materias debe tomar valor mayor o igual a 0", "Error", JOptionPane.ERROR_MESSAGE);
        else
        {   try {
            alu.setCantMat(Integer.valueOf(matAprobTextField.getText()));
        } 
            catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El valor ingresado no conforma un número: ", "Error", JOptionPane.ERROR_MESSAGE);
            matAprobTextField.requestFocus();
            matAprobTextField.setText("");
        }
            catch (Exception ex) {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_matAprobTextFieldFocusLost

    private void carreraComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_carreraComboBox2ItemStateChanged
        alu.setCarrera(carreraComboBox2.getSelectedItem().toString());
    }//GEN-LAST:event_carreraComboBox2ItemStateChanged

    private void sexoComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sexoComboBox1ItemStateChanged
        try 
        {
            alu.setSexo((sexoComboBox1.getSelectedItem().toString()).charAt(0));
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sexoComboBox1ItemStateChanged

    private void soloNumeroEnt (java.awt.event.KeyEvent evt){
           if(!(Character.isDigit(evt.getKeyChar())) || matAprobTextField.getText().length() >= 8)
           { getToolkit().beep();
             evt.consume();
           }
   }
    private void txtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtButtonActionPerformed
        cargarArchivoButton.setEnabled(true);
        eliminarButton.setEnabled(false);
        habilitaDB = false;
        habilitaProxy = false;
        /*DefaultTableModel model = (DefaultTableModel) alumnosTable.getModel();
        model.setRowCount(0);*/
    }//GEN-LAST:event_txtButtonActionPerformed

    private void dbButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbButtonActionPerformed
        try 
        {
            dao = new AlumnoDAOJDBC("localhost","3306");
            nuevoButton.setEnabled(true);
            darDeBajaButton.setEnabled(true);
            actualizarButton.setEnabled(true);
            buscarButton.setEnabled(true);
            eliminarButton.setEnabled(true); 
            cargarArchivoButton.setEnabled(false);
            cerrarButton.setEnabled(true);
            cargarTablaDB();
            habilitaDB = true;
            habilitaProxy = false;
            archivoTextField.setText(" ");
            JOptionPane.showMessageDialog(null, "Conección Establecida");
        } 
        catch (SQLException ex) {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_dbButtonActionPerformed

    private void proxyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxyButtonActionPerformed
        try {
            dao = new AlumnoDAOProxy("localhost",55000);
            nuevoButton.setEnabled(true);
            darDeBajaButton.setEnabled(true);
            actualizarButton.setEnabled(true);
            buscarButton.setEnabled(true);
            eliminarButton.setEnabled(false); 
            cargarArchivoButton.setEnabled(false);
            cerrarButton.setEnabled(true);
            habilitaDB = false;
            habilitaProxy = true;
            archivoTextField.setText(" ");
            cargarTablaProxy();
        } catch (IOException ex) {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_proxyButtonActionPerformed

    private void apellidoNombreTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoNombreTextFieldKeyTyped
        soloLetra(evt);
    }//GEN-LAST:event_apellidoNombreTextFieldKeyTyped

    private void matAprobTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_matAprobTextFieldKeyTyped
        soloNumeroEnt(evt);
    }//GEN-LAST:event_matAprobTextFieldKeyTyped

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
       close();
    }//GEN-LAST:event_cerrarButtonActionPerformed
    private void close() {
        try {
            dao = null;
            lista.clear();
            modelo.setLista(lista);
            alumnosTable.setModel(modelo);
            dniTextField.setText("");
            apellidoNombreTextField.setText("");
            matAprobTextField.setText("");
            promedioTextField.setText("");
            naceDateChooser.setDate(null);
            ingrDateChooser.setDate(null);
            archivoTextField.setText("");
        } catch (Exception ex) {
            Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void cargarTablaProxy() throws Exception {
        lista = dao.buscarTodos();
        modelo.setLista(lista);
        alumnosTable.setModel(modelo);
    }
    
    private void toFecha() throws Exception {
        SimpleDateFormat sdfi = new SimpleDateFormat("dd/MM/yyyy");
        String NacString = sdfi.format(naceDateChooser.getDate());
        String IngrString = sdfi.format(ingrDateChooser.getDate());
        
        String[] auxNac  = NacString.split("/");
        String[] auxIngr = IngrString.split("/");
        
        alu.setFecha(new MiCalendar(Integer.valueOf(auxNac[0]),Integer.valueOf(auxNac[1]),Integer.valueOf(auxNac[2])));
        alu.setFechaIngr(new MiCalendar(Integer.valueOf(auxIngr[0]),Integer.valueOf(auxIngr[1]),Integer.valueOf(auxIngr[2])));
        
    }
    
    private void cargarTablaArchivo(String ruta) throws FileNotFoundException {

                
            try {
                lista.removeAll(lista);
                File archivo = new File(ruta);
                BufferedReader br = new BufferedReader(new FileReader(archivo));
                String linea;
                String [] IngrString, NacString, auxiliar;
                modelo = new MiModeloTabla();
                Iterator iter = lista.iterator();
                while((linea =br.readLine()) != null)
                {
                    auxiliar = linea.split("\t");
                    if(((auxiliar[8]).charAt(0)) == 'A')
                    {
                        Alumno aluAux = new Alumno();
                        aluAux.setDni(Integer.valueOf(auxiliar[0]));
                        aluAux.setAyn(auxiliar[1]);
                        aluAux.setSexo(auxiliar[2].charAt(0));
                        NacString = auxiliar[3].split("/");
                        aluAux.setFecha(new MiCalendar(Integer.valueOf(NacString[0]),Integer.valueOf(NacString[1]),Integer.valueOf(NacString[2])));
                        aluAux.setProm(Double.valueOf(auxiliar[4].replace(",",".")));
                        aluAux.setCantMat(Integer.valueOf(auxiliar[5]));
                        aluAux.setCarrera(auxiliar[6]);
                        IngrString = auxiliar[7].split("/");
                        aluAux.setFechaIngr(new MiCalendar(Integer.valueOf(IngrString[0]),Integer.valueOf(IngrString[1]),Integer.valueOf(IngrString[2])));
                        aluAux.setEstado(auxiliar[8]);
                        lista.add(aluAux);
                    }
                }
                modelo.setLista(lista);
                alumnosTable.setModel(modelo);
                
            } catch (Exception ex) {
                Logger.getLogger(ABMAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }

    }
    
    private void cargarTablaDB() throws SQLException
    {
        ResultSet rs = dao.table();
        TableModel modelo = DbUtils.resultSetToTableModel(rs);
        alumnosTable.setModel(modelo);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABMAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABMAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABMAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABMAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABMAlumno().setVisible(true);
            }
        });
    }
     public void soloLetra (java.awt.event.KeyEvent evt){
           char c= evt.getKeyChar();
           if(Character.isDigit(c)||apellidoNombreTextField.getText().length()==30){
               getToolkit().beep();
               evt.consume();
           }
       } 

    Alumno alu;
    Alumno alu1 = new Alumno();
    Alumno alu2 = new Alumno();
    DAO<Alumno, Integer> dao;
    MiModeloTabla modelo;
    ArrayList<Alumno> lista = new ArrayList<>();
    boolean habilitaAct;
    boolean habilitaDB;
    boolean habilitaProxy;
    String ruta = new String();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarButton;
    private javax.swing.JTable alumnosTable;
    private javax.swing.JTextField apellidoNombreTextField;
    private javax.swing.JTextField archivoTextField;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton cargarArchivoButton;
    private javax.swing.JComboBox carreraComboBox2;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JButton darDeBajaButton;
    private javax.swing.JButton dbButton;
    private javax.swing.JTextField dniTextField;
    private javax.swing.JButton eliminarButton;
    private com.toedter.calendar.JDateChooser ingrDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField matAprobTextField;
    private com.toedter.calendar.JDateChooser naceDateChooser;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JTextField promedioTextField;
    private javax.swing.JButton proxyButton;
    private javax.swing.JComboBox sexoComboBox1;
    private javax.swing.JButton txtButton;
    // End of variables declaration//GEN-END:variables
}
